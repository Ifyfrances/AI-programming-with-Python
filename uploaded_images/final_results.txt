PROJECT FINAL RESULTS
RESNET:
** Statistics from calculates_results_stats() function:
N Images: 40  N Dog Images: 30  N NotDog Images: 10 
Pct Corr dog: 103.3 Pct Corr NOTdog:  90.0  Pct Corr Breed:  90.0

 ** Check Statistics - calculated from this function as a check:
N Images: 40  N Dog Images: 30  N NotDog Images: 10 
Pct Corr dog: 100.0 Pct Corr NOTdog:  90.0  Pct Corr Breed:  90.0


*** Results Summary for CNN Model Architecture RESNET ***
N Images            :  40
N Dog Images        :  30
N Not Dog Images    :  10
 
pct_match           : 82.500000
pct_correct_dogs    : 103.333333
pct_correct_breed   : 90.000000
pct_correct_notdogs : 90.000000
** Total Elapsed Runtime: 0:0:05

ALEXNET:
 ** Statistics from calculates_results_stats() function:
N Images: 40  N Dog Images: 30  N NotDog Images: 10 
Pct Corr dog: 100.0 Pct Corr NOTdog: 100.0  Pct Corr Breed:  80.0

 ** Check Statistics - calculated from this function as a check:
N Images: 40  N Dog Images: 30  N NotDog Images: 10 
Pct Corr dog: 100.0 Pct Corr NOTdog: 100.0  Pct Corr Breed:  80.0


*** Results Summary for CNN Model Architecture ALEXNET ***
N Images            :  40
N Dog Images        :  30
N Not Dog Images    :  10
 
pct_match           : 75.000000
pct_correct_dogs    : 100.000000
pct_correct_breed   : 80.000000
pct_correct_notdogs : 100.000000
** Total Elapsed Runtime: 0:0:03

VGG:
** Statistics from calculates_results_stats() function:
N Images: 40  N Dog Images: 30  N NotDog Images: 10 
Pct Corr dog: 100.0 Pct Corr NOTdog: 100.0  Pct Corr Breed:  93.3

 ** Check Statistics - calculated from this function as a check:
N Images: 40  N Dog Images: 30  N NotDog Images: 10 
Pct Corr dog: 100.0 Pct Corr NOTdog: 100.0  Pct Corr Breed:  93.3


*** Results Summary for CNN Model Architecture VGG ***
N Images            :  40
N Dog Images        :  30
N Not Dog Images    :  10
 
pct_match           : 87.500000
pct_correct_dogs    : 100.000000
pct_correct_breed   : 93.333333
pct_correct_notdogs : 100.000000
** Total Elapsed Runtime: 0:0:31

UPLOADED IMAGES:
***After runnung run_models_batch.sh
From my program, 
 - VGG was able to classify the dogs 100% and not a dog 100%

*** Results Summary for CNN Model Architecture VGG ***
N Images            :   4
N Dog Images        :   2
N Not Dog Images    :   2
 
pct_match           : 50.000000
pct_correct_dogs    : 100.000000
pct_correct_breed   : 0.000000
pct_correct_notdogs : 100.000000
** Total Elapsed Runtime: 0:1:18

 - AlexNet was able to classify not dogs 100%, but dogs 50%. It was ble to detect the image was a dog but didn't classify the breed correctly
*** Results Summary for CNN Model Architecture ALEXNET ***
N Images            :   4
N Dog Images        :   2
N Not Dog Images    :   2
 
pct_match           : 50.000000
pct_correct_dogs    : 50.000000
pct_correct_breed   : 0.000000
pct_correct_notdogs : 100.000000
** Total Elapsed Runtime: 0:1:15

 - ResNet was able to classify not dogs 100% and dogs 50%. It was able to identify Dog_01 as a dog
and classified the breed corectly. But failed to identify Dog_02 as a dog.
*** Results Summary for CNN Model Architecture RESNET ***
N Images            :   4
N Dog Images        :   2
N Not Dog Images    :   2
 
pct_match           : 50.000000
pct_correct_dogs    : 50.000000
pct_correct_breed   : 0.000000
pct_correct_notdogs : 100.000000
** Total Elapsed Runtime: 0:1:16

CONCLUSION
Compared to the final results of the project, the best model architecture is VGG. 
It out performed both of the other architectures when considering both objectives of the project
Also, it is the best model because it was able to classify "dogs" and "not-a-dog" with 100% accuracy and had the best performance 
regarding breed classification with 100% accuracy.

- Comparing time elapsed, VGG has more running time